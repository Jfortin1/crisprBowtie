% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runCrisprBowtie.R
\name{runCrisprBowtie}
\alias{runCrisprBowtie}
\title{Find gRNA spacer alignments with bowtie}
\usage{
runCrisprBowtie(
  spacers,
  mode = c("protospacer", "spacer"),
  bowtie_index = NULL,
  bsgenome = NULL,
  crisprNuclease = NULL,
  canonical = TRUE,
  ignore_pam = FALSE,
  n_mismatches = 0,
  all_alignments = TRUE,
  n_max_alignments = 1000,
  force_spacer_length = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{spacers}{Character vector of DNA sequences corresponding
to gRNA spacer sequences. Must all be of equal length.}

\item{mode}{String specifying which alignment mode should be used:
\code{protospacer} or \code{spacer}. In spacer mode, sequences are
aligned to the genome without PAM (spacer only). In protospacer mode,
sequences are aligned with all valid PAM sequences appended
(spacer + PAM). Valid PAMs depend on the \code{canonical} and 
\code{ignore_pam} user inputs. Spacer mode is recommended
for alignments with a large number of potental PAM sequences
such as non-canonical Cas9 PAM sequences, and especially
non-canonical Cas12a PAM sequences.}

\item{bowtie_index}{Path to the bowtie index to be used for alignment.}

\item{bsgenome}{BSgenome object to be used in spacer mode.}

\item{crisprNuclease}{\code{CrisprNuclease} object.}

\item{canonical}{Should only canonical PAM sequences be considered?
TRUE by default.}

\item{ignore_pam}{If TRUE, will return all matches regardless of
PAM sequence. FALSE by default.}

\item{n_mismatches}{Integer between 0 and 3 specifying maximum
number of mismatches allowed between spacer and protospacer sequences.}

\item{all_alignments}{Should all possible alignments be returned?
TRUE by default.}

\item{n_max_alignments}{Maximum number of alignments to return if
\code{all_alignments} is FALSE. 1000 by default.}

\item{force_spacer_length}{Should the spacer length be overwritten in the
crisprNuclease object? FALSE by default.}

\item{verbose}{Should messages be printed to the consolde? TRUE by default.}
}
\value{
\strong{runBowtie} returns spacer alignment data, including genomic 
    coordinates and sequence, and position of mismatches relative
    to \code{pam_site}.
}
\description{
Return bowtie alignments for a list of gRNA spacer sequences.
}
\details{
\code{runCrisprBowtie} is similar to \code{runBowtie}, with the 
    addition of imposing constraints on PAM sequences such that the query
    sequences are valid protospacer sequences in the searched genome.
}
\examples{
fasta <- system.file(package="crisprBowtie", "example/chr1.fa")
outdir <- tempdir()
Rbowtie::bowtie_build(fasta,outdir=outdir, force=TRUE, prefix="tempIndex")
index <- file.path(outdir, "tempIndex")
seqs <- c("GGAAATTCCCCCAGTGGCGC",
          "ACACAGCTGCGGACAGGGCC")
data(SpCas9, package="crisprBase")
results <- runCrisprBowtie(seqs,
                           bowtie_index=index,
                           n_mismatches=2,
                           crisprNuclease=SpCas9)

}
\author{
Jean-Philippe Fortin
}
